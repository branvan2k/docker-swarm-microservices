---
- hosts: all
  become: yes
  vars:
    advertise_addr: "192.168.56.10" # Dirección IP del nodo manager
    listen_addr: "0.0.0.0:2377"    # Puerto de escucha para el Swarm

  tasks:
    - name: Instalar Docker
      apt:
        name: docker.io
        state: present

    - name: Añadir el usuario vagrant al grupo docker
      user:
        name: vagrant
        groups: docker
        append: yes # Asegura que se añada al grupo sin eliminar otros grupos

    - name: Reiniciar el servicio Docker
      service:
        name: docker
        state: restarted
        enabled: yes

    - name: Inicializar el cluster de Swarm
      shell: |
        docker swarm init --advertise-addr 192.168.56.10 --listen-addr 0.0.0.0:2377 
      args:
        executable: /bin/bash
      register: swarm_init_result
      ignore_errors: yes # Ignorar errores si el nodo ya es un manager

    - name: Mostrar mensaje si el nodo ya es un manager
      debug:
        msg: "El nodo ya está inicializado como manager de Swarm."
      when: swarm_init_result.rc != 0 and "already part of a swarm" in swarm_init_result.stderr

    - name: Capturar el token de unión para workers
      shell: |
        docker swarm join-token worker -q
      args:
        executable: /bin/bash
      register: worker_join_token
      when: swarm_init_result.rc == 0 or "already part of a swarm" in swarm_init_result.stderr

    - name: Guardar el token de unión para workers
      copy:
        content: "{{ worker_join_token.stdout }}"
        dest: /vagrant/worker_join_token.txt
      when: worker_join_token is defined